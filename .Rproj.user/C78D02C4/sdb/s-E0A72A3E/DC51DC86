{
    "contents" : "if(!require(\"repmis\"))\n  install.packages(\"repmis\")\nlibrary(\"repmis\")\n\n## Process Available Packages\n## Uncomment the following three lines when creating new package list\n# AP <- available.packages()\n# AP <- AP[,-c(3,9:17)]\n# save(AP, file=\"ApprovedPkgs.Rdata\")\n\n# Load AP, available packages\nload(file=\"data/ApprovedPkgs.Rdata\") \n\nPackagesName <- AP[,1]\n\nConnectedPackages <- function( PkgName , Relation)\n{\n  DataColumnNames <- colnames(AP)\n  AllRelations <- DataColumnNames[3:7]\n  AllRelations <- c(\"all\",AllRelations)  \n  \n  CreateList <- NULL\n  PkgIndex <- which(PackagesName == PkgName)\n  if( is.element(Relation, AllRelations))\n  {\n    if (is.element(Relation , AllRelations[2:6]))\n    {\n      DepList <- unlist(strsplit(AP[PkgIndex,Relation], \",\"))\n      DepList <- gsub(\" \", \"\", DepList)\n      DepList <- gsub('\\n', '', DepList)\n      DepList <- DepList[!grepl('R[(]>=[1-3].',DepList)]\n      DepList <- gsub(\"[(]>.+[)]\",\"\",DepList)  \n      CreateList <- c(PkgName,DepList)\n      CreateList <- CreateList[!is.na(CreateList)]\n    }\n    else\n    {\n      DepList1 <- unlist(strsplit(AP[PkgIndex,\"Depends\"], \",\"))\n      DepList1 <- gsub(\" \", \"\", DepList1)\n      DepList1 <- gsub('\\n', '', DepList1)\n      DepList1 <- DepList1[!grepl('R[(]>=[1-3].',DepList1)]\n      DepList1 <- gsub(\"[(]>.+[)]\",\"\",DepList1)  \n      \n      DepList2 <- unlist(strsplit(AP[PkgIndex,\"Imports\"], \",\"))\n      DepList2 <- gsub(\" \", \"\", DepList2)\n      DepList2 <- gsub('\\n', '', DepList2)\n      DepList2 <- DepList2[!grepl('R[(]>=[1-3].',DepList2)]\n      DepList2 <- gsub(\"[(]>.+[)]\",\"\",DepList2)  \n      \n      DepList3 <- unlist(strsplit(AP[PkgIndex,\"LinkingTo\"], \",\"))\n      DepList3 <- gsub(\" \", \"\", DepList3)\n      DepList3 <- gsub('\\n', '', DepList3)\n      DepList3 <- DepList3[!grepl('R[(]>=[1-3].',DepList3)]\n      DepList3 <- gsub(\"[(]>.+[)]\",\"\",DepList3)  \n      \n      CreateList <- unique(c(PkgName,DepList1,DepList2,DepList3))\n      CreateList <- CreateList[!is.na(CreateList)]\n    }\n  }\n  else\n  {\n    cat(\"Wrong Relation!\\n\")\n  }\n  if( length(CreateList) == 0)\n  {\n    cat(PkgName,\" is wrong\\n\")\n  }\n  CreateList\n}\n\nCreateNeighbor <- function(PkgList, Relation)\n{\n  PackageNetwork <- NULL\n  for(i in 1:length(PkgList))\n  {\n    PkgIndex <- which(PackagesName == PkgList[i])\n    RelationList <- ConnectedPackages(PkgList[i], Relation)\n    if(length(RelationList) >0 )\n    {\n      for (j in 1:length(RelationList))\n      {\n        if(is.element(RelationList[j], PackagesName))\n        {\n          RelPkgIndex <- which(PackagesName == RelationList[j])\n          PackageNetwork <- c(PackageNetwork, c(PkgIndex, RelPkgIndex))\n        }\n      }\n    }\n  }\n  names(PackagesName[unique(PackageNetwork)])\n}\n\nInstallApprovedPackages <- function(PkgList){\n  AllPkgList <- CreateNeighbor(PkgList,\"all\")\n  AllPkgVer <- AP[AllPkgList,\"Version\"]\n  message(\"Start install the following packages:\")\n  for(pkgName in AllPkgList){\n    message(pkgName)  \n  }\n  repmis::InstallOldPackages(AllPkgList, AllPkgVer)\n  message(\"Move the following package directories to another machine.\")\n  for(pkgName in AllPkgList){\n    message(pkgName)  \n  }\n}",
    "created" : 1411760685494.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1270192492",
    "id" : "DC51DC86",
    "lastKnownWriteTime" : 1412351721,
    "path" : "~/Rwork/RegOfPkg/R/RegOfPkg.R",
    "project_path" : "R/RegOfPkg.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}